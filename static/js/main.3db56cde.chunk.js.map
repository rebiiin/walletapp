{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","reportWebVitals.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initailState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3db56cde.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <h2>\r\n            Expense Tracker\r\n        </h2>\r\n    )\r\n}\r\n","export default (state , action) => {\r\n    \r\n    switch(action.type) {\r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction => transaction.id \r\n                     !== action.payload)\r\n            }\r\n\r\n        case 'ADD_TRANSACTION':\r\n                return {\r\n                    ...state,\r\n                    transactions: [action.payload,...state.transactions]\r\n                   \r\n                }\r\n\r\n\r\n             \r\n\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, {createContext,useReducer} from 'react';\r\nimport AppReducer  from './AppReducer';\r\n//initial state\r\nconst initailState = {\r\n\r\n        transactions: []\r\n\r\n\r\n            // just ia hve commented this section\r\n            // transactions: [\r\n            //   { id: 1, text: 'Flower', amount: -20 },\r\n            //   { id: 2, text: 'Salary', amount: 300 },\r\n            //   { id: 3, text: 'Book', amount: -10 },\r\n            //   { id: 4, text: 'Camera', amount: 150 }\r\n            // ]\r\n\r\n}\r\n//Create contaxt\r\n export const GlobalContext  = createContext(initailState);\r\n\r\n\r\n // Provider component\r\n\r\n export const GlobalProvider = ({ children }) => {\r\n    const [state , dispatch] = useReducer(AppReducer, initailState);\r\n\r\n    //Actions\r\n\r\n   function deleteTransaction(id) {\r\n       dispatch({\r\n          type: 'DELETE_TRANSACTION',\r\n          payload: id\r\n        \r\n       });\r\n   }\r\n  \r\n\r\n   function addTransaction(transaction) {\r\n    dispatch({\r\n      type: 'ADD_TRANSACTION',\r\n      payload: transaction\r\n    });\r\n  }\r\n\r\n\r\n    return (<GlobalContext.Provider value={{\r\n        transactions: state.transactions ,\r\n        deleteTransaction,\r\n        addTransaction\r\n    }}>\r\n       \r\n        {children}\r\n\r\n    </GlobalContext.Provider>)\r\n }\r\n\r\n\r\n","import React, {useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nexport const Balance = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n    return (\r\n        <>\r\n           <h4>Your Balance</h4> \r\n           <h1 id=\"blance\">${total}</h1>\r\n        </>\r\n    )\r\n}\r\n","import React,{useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nexport const IncomeExpenses = () => {\r\n\r\n\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n\r\n  const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n \r\n  const income = amounts\r\n\r\n\r\n    .filter(item => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n\r\n    const expense = (\r\n      amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n      -1\r\n    ).toFixed(2);\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"inc-exp-container\">\r\n        <div>\r\n          <h4>Income</h4>\r\n          <p  className=\"money plus\">{income}</p>\r\n        </div>\r\n        <div>\r\n          <h4>Expense</h4>\r\n          <p  className=\"money minus\">{expense}</p>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n","import React, {useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nexport const Transaction = ( {transaction} ) => {\r\n\r\n  const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n  const sign = transaction.amount < 0 ? '-' : '+';\r\n    return (\r\n        <li className={transaction.amount < 0 ? 'minus':'plus'}>\r\n        {transaction.text} <span>{sign}${Math.abs(transaction.amount)}</span>\r\n        <button onClick={() => deleteTransaction(transaction.id)} className=\"delete-btn\">x</button>\r\n      </li>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React, {useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport { Transaction } from  './Transaction';\r\nexport const TransactionList = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n \r\n    return (\r\n        <>\r\n           <h3>History</h3>\r\n      <ul id=\"list\" className=\"list\">\r\n        {transactions.map(transaction => (<Transaction key={transaction.id} transaction={transaction} />))}\r\n         \r\n      </ul>   \r\n        </>\r\n    )\r\n}\r\n","import React,{useState,useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nexport const AddTransaction = () => {\r\n\r\n    const [text,setText] = useState('');\r\n    \r\n    const [amount,setAmount] = useState(0);\r\n\r\n    const { addTransaction } = useContext(GlobalContext);\r\n\r\n\r\n    const onSubmit = e => {\r\n      e.preventDefault();\r\n  \r\n      const newTransaction = {\r\n        id: Math.floor(Math.random() * 100000000),\r\n        text,\r\n        amount: +amount // + used as Cast string to number\r\n      }\r\n  \r\n      addTransaction(newTransaction);\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <h3>Add new transaction</h3>\r\n        <form onSubmit={onSubmit}>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"text\">Text</label>\r\n            <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter text...\" />\r\n          </div>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"amount\"\r\n              >Amount <br />\r\n              (negative - expense, positive - income)</label\r\n            >\r\n            <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} placeholder=\"Enter amount...\" />\r\n          </div>\r\n          <button className=\"btn\">Add transaction</button>\r\n        </form>\r\n      </>\r\n    )\r\n}\r\n","import './App.css';\nimport {Header} from './components/Header';\nimport {Balance} from './components/Balance';\nimport {IncomeExpenses} from './components/IncomeExpenses';\nimport {TransactionList} from './components/TransactionList';\nimport {AddTransaction} from './components/AddTransaction';\nimport {GlobalProvider} from './context/GlobalState';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n     <Header />\n     <div className=\"container\">\n\n       <Balance />\n\n       <IncomeExpenses />\n\n\n       <TransactionList />\n\n\n       <AddTransaction />\n\n     </div>\n\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}